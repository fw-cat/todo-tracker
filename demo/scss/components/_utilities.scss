@use "./variables" as variables;
@use "./fonts" as fonts;

@mixin utilities() {
  // デフォルト画像サイズ
  img {
    max-width: 100%;
  }

  // リンク系
  a {
    text-decoration: none;
    color: inherit;
  }

  // ボタンベース
  .btn, button {
    display: flex;
    width: fit-content;
    text-decoration: none;
    letter-spacing: .1em;
    padding-inline: 1em;
    padding-block: .5em;
    border-radius: 5px;
    border: none;
    cursor: pointer;

    &:has(img) {
      background: none;
      padding: 0;
      border-radius: 0%;
    }

    i {
      margin-inline-start: .1em;
    }
  }

  // 入力フォーム
  input {
    @include fonts.m-plus-rounded-1c-regular($font-size: 1.6em, $font-color: #5e5e5e);
    background-color: variables.$form-input-box-color;
    border: none;
    border-radius: 5px;
    width: 100%;
    padding-block: .5em;
    padding-inline-start: .5em;

    &::placeholder {
      color: variables.$form-input-placeholder-color;
    }
  }

  .helper {
    @include fonts.m-plus-rounded-1c-regular($font-size: 1em, $font-color: variables.$form-labe-color);
    padding-block-start: .5em;
    text-align: right;
  }

  // マージン系
  .mi-auto {
    margin-inline: auto;
  }
  .mb-auto {
    margin-block: auto;
  }

  // 共通要素系
  @each $value in variables.$displays {
    .d-#{$value} {display: $value;}
  }

  // 回転系
  @each $key, $value in variables.$anges {
    .rotate-x#{$key} {
      transform: rotateX($value);
    }
    .rotate-y#{$key} {
      transform: rotateY($value);
    }
    .rotate-z#{$key} {
      transform: rotateZ($value);
    }
  }
}
