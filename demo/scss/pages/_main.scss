@use "./components/fonts" as fonts;
@use "./components/mixins" as mixins;
@use "./components/variables" as variables;

@mixin styles {
  #main {
    main {
      width: clamp(340px, 80vw, 1200px);
    }
  
    #trackers {
      @include mixins.d-flex($flex-direction: row,
        $flex-wrap: wrap,
        $align-items: flex-start,
        $align-content: stretch,
        $justify-content: flex-start);
      gap: 2em 2%;

      @include mixins.breakpoint-max(md) {
        column-gap: 4%;
        justify-content: space-between;
      }
  
      .tracker {
        flex: 0 0 32%;

        @include mixins.breakpoint-max(md) {
          flex: 0 0 48%;
        }
  
        @each $num, $color in variables.$tracker-colors {
          &.color-#{$num} {
            .interval {
              background-image: url(/images/color-icon/color-#{$num}-label.svg);
            }
            .achievement {
              .filled {
                background-color: $color;
              }
              .label {
                background-image: url(/images/color-icon/color-#{$num}-label.svg);
              }
            }
          }
        }

        .card {
          border-radius: 15px;
          background-color: variables.$task-bg-color;
          padding-block: 1em;
          padding-inline: .5em;
          min-height: 280px;
          // position: relative;
          anchor-name: --tracker;
          anchor-scope: --tracker;
  
          @include mixins.d-flex($flex-direction: column,
            $flex-wrap: nowrap,
            $align-items: flex-start,
            $justify-content: flex-start
          );

          @include mixins.breakpoint-max(md) {
            min-height: auto;
            aspect-ratio: 1/1;
          }
  
          .interval {
            position: absolute;
            position-anchor: --tracker;
            bottom: calc(anchor(top) - 1em);
            left: calc(anchor(right) - 3em);
            background-repeat: no-repeat;
            background-size: contain;
            text-align: center;
            padding: .5em 1em;
          }
 
          .card-header {
            flex: 0 0 1em;

            .toracker-days {
              display: inline-flex;
              color: variables.$form-labe-color;

              &::before {
                content: "";
                display: block;
                background-image: url("/images/icons/calendar@2x.png");
                background-size: contain;
                background-repeat: no-repeat;
                height: 1em;
                aspect-ratio: 1.5;
              }
            }
          }

          .card-body {
            width: 100%;
            flex: 1 1 auto;

            @include mixins.d-flex($flex-direction: column,
              $flex-wrap: nowrap,
              $align-items: center,
              $justify-content: space-between
            );

            .tracker-icons {
              width: 100%;
              flex: 0 0 100%;
    
              @include mixins.breakpoint-max(md) {
                flex: 0 0 auto;
              }
    
              :where(&):has(> :nth-child(8)) {
                display: grid;
                grid-template-columns: repeat(7, 1fr);
                grid-template-rows: repeat(5, 1fr);
                grid-column-gap: 2%;
                grid-row-gap: 2%;
      
                img {
                  width: 100%;
                }
              }
      
              :where(&):has(> :nth-child(-n + 7):last-child) {
                @include mixins.d-flex($flex-direction: row,
                  $flex-wrap: wrap,
                  $align-items: center,
                  $justify-content: flex-start);
                gap: 2%;
      
                img {
                  width: 12%;
                  flex: 1 1 12%;
                }
              }
      
            }

            .tracker-label {
              width: 100%;
              flex: 0 0 100%;
              text-align: center;
    
              @include fonts.m-plus-rounded-1c-medium(
                $font-size: 1em,
                $font-color: variables.$task-label
              );
    
              @include mixins.breakpoint-max(md) {
                flex: 0 0 auto;
              }
            }
          }
        }

        .achievement {
          margin-block-start: 1em;
          background-color: #cacdd4;
          border-radius: 10px;
          border: 2px solid #808080;
          height: calc(1em + 4px);

          .hide {
            display: none;
          }
          @include mixins.breakpoint-max(md) {
            display: none;
          }

          .filled {
            width: 0%;
            height: 100%;
            border-radius: 10px;
            anchor-name: --tracker-achievement;
            anchor-scope: --tracker-achievement;

            .label {
              position: absolute;
              position-anchor: --tracker-achievement;
              position-area: right center;
              background-repeat: no-repeat;
              background-size: cover;
              aspect-ratio: 6;
              text-align: center;
              padding-block: .3em;
              margin-inline-start: -1em;
            }
          }
        }
      }
  
      .new-tracker {
        border-radius: 15px;
        background-color: variables.$task-bg-color;
        padding-block: 1em;
        padding-inline: .5em;
        min-height: 280px;
        position: relative;

        @include mixins.breakpoint-max(md) {
          min-height: auto;
          aspect-ratio: 1/1;
        }

        @include mixins.d-flex($flex-direction: row,
          $flex-wrap: nowrap,
          $align-items: center,
          $justify-content: center);
        background-color: variables.$task-border-color;
  
        p {
          text-align: center;
          width: 5em;
          color: variables.$task-new-label;
  
          img {
            width: 100%;
          }
        }
      }
  
      .blank-tracker {
        background-color: transparent;
        border: 2px dashed variables.$task-border-color;

        border-radius: 15px;
        padding-block: 1em;
        padding-inline: .5em;
        min-height: 280px;
        position: relative;

        @include mixins.d-flex($flex-direction: column,
          $flex-wrap: nowrap,
          $align-items: flex-start,
          $justify-content: flex-start
        );

        @include mixins.breakpoint-max(md) {
          min-height: auto;
          aspect-ratio: 1/1;
        }
      }
    }
  }
}